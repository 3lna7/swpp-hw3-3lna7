{"ast":null,"code":"var _jsxFileName = \"/home/elinax/Hw3/swpp-hw3-3lna7/src/components/ProtectedRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = _ref => {\n  let {\n    component: Cmp,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => localStorage.getItem('/') ? /*#__PURE__*/_jsxDEV(Cmp, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["/home/elinax/Hw3/swpp-hw3-3lna7/src/components/ProtectedRoutes.js"],"names":["React","Route","Redirect","ProtectedRoutes","component","Cmp","rest","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,GAAb;AAAkB,OAAGC;AAArB,GAAD;AAAA,sBACpB,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IACJC,YAAY,CAACC,OAAb,CAAqB,GAArB,iBACI,QAAC,GAAD,OAASF;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,gBAGI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,CAAxB;;KAAMJ,e;AAWN,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst ProtectedRoutes = ({ component: Cmp, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => (\r\n            localStorage.getItem('/') ? (\r\n                <Cmp {...props} />\r\n            ) :\r\n                <Redirect to='/' />\r\n        )}\r\n    />\r\n)\r\nexport default ProtectedRoutes"]},"metadata":{},"sourceType":"module"}